{"version":3,"sources":["fbase.js","components/Authform.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","firebase","initializeApp","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","autoFocus","displayName","src","width","height","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","creatorId","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","newArray","docs","map","document","data","marginTop","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontsize","faUser","AppRouter","isLoggedIn","maxWidth","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0f71850a.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_APIKEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth()\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { name, value },\r\n        } = event;\r\n        if ( name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if (newAccount) {\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n        } catch (error) {\r\n            // if fail\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input \r\n                name=\"email\" \r\n                type=\"email\" \r\n                placeholder=\"Email\" \r\n                required \r\n                value={email} \r\n                onChange={onChange} \r\n                className=\"authInput\"\r\n                />\r\n                <input \r\n                name=\"password\" \r\n                type=\"password\" \r\n                placeholder=\"Password\" \r\n                required \r\n                value={password} \r\n                onChange={onChange}\r\n                className=\"authInput\"\r\n                />\r\n                <input \r\n                type=\"submit\"\r\n                value={newAccount ? \"Create Account\" : \"Log In\"} \r\n                className=\"authInput authSubmit\"\r\n                />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount ? \"Sign In\" : \"Create Account\"}\r\n            </span>\r\n        </>\r\n    );\r\n};\r\nexport default AuthForm;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faTwitter,\r\n    faGoogle,\r\n    faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/Authform\";\r\n\r\nconst Auth = () => {\r\n    \r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: {name},\r\n        } = event;\r\n        let provider;\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n    };\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }} \r\n            />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;","import { dbService, storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"삭제하시겠습니까?\");\r\n        if (ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            if (nweetObj.attachmentUrl !== \"\") {\r\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n            }\r\n        }\r\n    };\r\n\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n        setNewNweet(value);\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\r\n        setEditing(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"nweet\">\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                        <input \r\n                            onChange={onChange} \r\n                            value={newNweet} \r\n                            required \r\n                            placeholder=\"Edit your nweet\"\r\n                            autoFocus\r\n                            className=\"formInput\"\r\n                            />\r\n                        <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\"/>\r\n                    </form>\r\n                    <button onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                        Cancel\r\n                    </button>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h2>{nweetObj.displayName}</h2>\r\n                    <h4>{nweetObj.text}</h4>\r\n                    {nweetObj.attachmentUrl && (\r\n                        <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\r\n                    )}\r\n                    {isOwner && (\r\n                        <div className=\"nweet__actions\">\r\n                            <span onClick={onDeleteClick}>\r\n                                <FontAwesomeIcon icon={faTrash} />\r\n                            </span>\r\n                            <span onClick={toggleEditing}>\r\n                                <FontAwesomeIcon icon={faPencilAlt} />\r\n                            </span>\r\n                        </div>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;\r\n","import { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Redirect } from \"react-router-dom\";\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (nweet === \"\") {\r\n            return; //아무것도 없으면 동작 안함\r\n        }\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = storageService\r\n            .ref()\r\n            .child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        await dbService.collection(\"nweets\").add({\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        });\r\n        setNweet(\"\");\r\n        setAttachment(\"\"); //attachment 초기화\r\n    };\r\n\r\n\r\n    const onChange = (event) => {\r\n        event.preventDefault();\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: { files },\r\n        } = event;\r\n        const theFile = files[0]; /* 파일은 항상 배열 형태로 옴 */\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        if (Boolean(theFile)) {\r\n            reader.readAsDataURL(theFile);\r\n        }\r\n    };\r\n\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input\r\n                id=\"attach-file\" \r\n                type=\"file\" \r\n                accept=\"image/*\" \r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }}\r\n            />\r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img \r\n                        src={attachment} \r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }} \r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default NweetFactory;","import React, { useState, useEffect } from \"react\";\r\nimport { dbService } from \"fbase\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\nconst Home = ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dbService\r\n        .collection(\"nweets\")\r\n        .orderBy(\"createdAt\", \"desc\")\r\n        .onSnapshot((snapshot) => {\r\n            const newArray = snapshot.docs.map((document) => ({\r\n                id: document.id,\r\n                ...document.data(),\r\n            }));\r\n            setNweets(newArray);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj} />\r\n            <div style={{marginTop: 30 }}>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet key={nweet.id}\r\n                    nweetObj={nweet}\r\n                    isOwner={nweet.creatorId === userObj.uid}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from \"react\";\r\nimport { authService, dbService } from \"fbase\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({ displayName: newDisplayName });\r\n            refreshUser();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input \r\n                    onChange={onChange}\r\n                    type=\"text\" \r\n                    placeholder=\"Display name\"\r\n                    value={newDisplayName}\r\n                    autoFocus\r\n                    className=\"formInput\"\r\n                />\r\n                <input \r\n                    type=\"submit\" \r\n                    value=\"Update Profile\" \r\n                    className=\"formBtn\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }}\r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n    return (\r\n        <nav>\r\n            <ul style={{display: \"flex\", justifyContent: \"center\", marginTop: 50}}>\r\n                <li>\r\n                    <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                        <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/profile\"\r\n                    style={{marginLeft: 10,\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    fontsize: 12,\r\n                    }}\r\n                    >\r\n                        <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                        <span style={{ marginTop: 10 }}>\r\n                            {userObj.displayName\r\n                            ? `${userObj.displayName}의 Profile`\r\n                            : \"Profile\"}\r\n                        </span>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navigation;","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj}/>}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <div style={{\r\n                        maxWidth: 890,\r\n                        width: \"100%\",\r\n                        margin: \"0 auto\",\r\n                        marginTop: 80,\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                    }}>\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile refreshUser={refreshUser} userObj={userObj}/>\r\n                        </Route>\r\n                    </div>\r\n                ) : (\r\n                    <Route exact path=\"/\">\r\n                        <Auth />\r\n                    </Route>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({ //필요한 것만 뽑기\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(false); //유저가 없는 경우 false\n      }\n      setInit(true);\n    });\n  }, []); //2번째 인자, 대괄호가 있어야만 최초1번실행 \n\n  const refreshUser = () => { //함수가 실행되면 인증 모듈에서 authService.currentuser를 통해 얻은 새 user를 userObj에 업데이트\n    const user = authService.currentUser;\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter \n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)} \n          userObj={userObj}\n        />\n      ) : (\n        \"initializing...\"\n      )}\n      {/* <footer>&copy; {new Date().getFullYear()} Nwitter</footer> */}\n    </>\n  );\n};\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./styles.css\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}